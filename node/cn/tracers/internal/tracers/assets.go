// Code generated by go-bindata. DO NOT EDIT.
// sources:
// 4byte_tracer.js (2.92kB)
// call_tracer.js (10.664kB)
// evmdis_tracer.js (4.194kB)
// noop_tracer.js (1.26kB)
// opcount_tracer.js (1.372kB)
// prestate_tracer.js (4.373kB)
// revert_tracer.js (2.248kB)

package tracers

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __4byte_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x5b\x6f\xdb\x4a\x0e\x7e\xb6\x7f\x05\xd7\x2f\xb5\x51\x59\x8e\x2f\x89\x2f\xd9\x16\xf0\xe6\xa4\x6d\x80\x9c\x24\x88\xdd\x3d\x28\x16\xfb\x30\x9e\xa1\xac\xd9\xc8\x33\xc2\x0c\xe5\x4b\x73\xf2\xdf\x17\x1c\x49\x89\x93\xd3\x62\xbb\x4f\x96\x47\xc3\x8f\x1f\xc9\x8f\xa4\x7a\x3d\xb8\xb0\xf9\xc1\xe9\x75\x4a\x30\x38\xe9\x8f\x61\x99\x22\xac\x6d\x17\x29\x45\x87\xc5\x06\xe6\x05\xa5\xd6\xf9\x66\xaf\x07\xcb\x54\x7b\x48\x74\x86\xa0\x3d\xe4\xc2\x11\xd8\x04\xe8\xcd\xfd\x4c\xaf\x9c\x70\x87\xb8\xd9\xeb\x95\x36\x3f\x7c\xcd\x08\x89\x43\x04\x6f\x13\xda\x09\x87\x33\x38\xd8\x02\xa4\x30\xe0\x50\x69\x4f\x4e\xaf\x0a\x42\xd0\x04\xc2\xa8\x9e\x75\xb0\xb1\x4a\x27\x07\x86\xd4\x04\x85\x51\xe8\x82\x6b\x42\xb7\xf1\x35\x8f\xcf\x37\x5f\xe1\x1a\xbd\x47\x07\x9f\xd1\xa0\x13\x19\xdc\x15\xab\x4c\x4b\xb8\xd6\x12\x8d\x47\x10\x1e\x72\x3e\xf1\x29\x2a\x58\x05\x38\x36\xfc\xc4\x54\x16\x15\x15\xf8\x64\x0b\xa3\x04\x69\x6b\x22\x40\xcd\xcc\x61\x8b\xce\x6b\x6b\x60\x58\xbb\xaa\x00\x23\xb0\x8e\x41\xda\x82\x38\x00\x07\x36\x67\xbb\x0e\x08\x73\x80\x4c\xd0\x8b\xe9\x2f\x24\xe4\x25\x6e\x05\xda\x04\x37\xa9\xcd\x11\x28\x15\xc4\x51\xef\x74\x96\xc1\x0a\xa1\xf0\x98\x14\x59\xc4\x68\xab\x82\xe0\x8f\xab\xe5\x97\xdb\xaf\x4b\x98\xdf\x7c\x83\x3f\xe6\xf7\xf7\xf3\x9b\xe5\xb7\x73\xd8\x69\x4a\x6d\x41\x80\x5b\x2c\xa1\xf4\x26\xcf\x34\x2a\xd8\x09\xe7\x84\xa1\x03\xd8\x84\x11\x7e\xbf\xbc\xbf\xf8\x32\xbf\x59\xce\xff\x71\x75\x7d\xb5\xfc\x06\xd6\xc1\xa7\xab\xe5\xcd\xe5\x62\x01\x9f\x6e\xef\x61\x0e\x77\xf3\xfb\xe5\xd5\xc5\xd7\xeb\xf9\x3d\xdc\x7d\xbd\xbf\xbb\x5d\x5c\xc6\xb0\x40\x66\x85\x6c\xff\xbf\x73\x9e\x84\xea\x39\x04\x85\x24\x74\xe6\xeb\x4c\x7c\xb3\x05\xf8\xd4\x16\x99\x82\x54\x6c\x11\x1c\x4a\xd4\x5b\x54\x20\x40\xda\xfc\xf0\xcb\x45\x65\x2c\x91\x59\xb3\x0e\x31\xff\x54\x90\x70\x95\x80\xb1\x14\x81\x47\x84\xbf\xa7\x44\xf9\xac\xd7\xdb\xed\x76\xf1\xda\x14\xb1\x75\xeb\x5e\x56\xc2\xf9\xde\xc7\xb8\xc9\x98\xa3\xd5\x81\x70\xe9\x84\x44\x07\x1e\x85\x93\x29\xfa\x10\x4c\x78\xd1\xd5\x0a\x0d\xe9\x44\xa3\xf3\x11\x8b\x14\xa4\xcd\x32\x94\xe4\x99\xc1\x26\x5c\xcc\xad\xa7\x6e\xee\xac\x44\xef\xb5\x59\x73\xe0\x70\x45\xaf\x2e\xc2\x06\x29\xb5\xca\xc3\x11\xdc\xdb\x68\xbc\xfe\x8e\x75\x36\x7c\x91\x97\x65\x54\x82\x44\x04\xde\x86\xe8\xc1\x21\xcb\x0c\x15\x78\xbd\x36\x82\x0a\x87\xa1\x97\x56\x08\x1b\x41\x92\xc5\x2e\xd6\x42\x1b\x4f\x7f\x01\x64\x9c\xba\x22\x97\x7b\xb1\xc9\x33\x9c\xf1\x33\xc0\x47\x50\xb8\x2a\xd6\x31\x71\x0a\x96\x4e\x18\x2f\x24\x8b\xbb\x0d\xad\x93\xfd\xa0\x3f\xc2\xd3\xe9\x18\x87\xa7\x4a\x9c\x4c\x86\x67\xd3\x41\x72\x3a\x9c\x9c\xf5\x47\x7d\x3c\x9b\x26\xa3\x31\x4e\xc7\xc3\xd5\x40\x9e\x9e\xe1\x58\x4c\x4e\xc6\xc3\x55\x1f\xc5\xc9\x24\x51\xe3\xd3\x71\x1f\xa7\x0a\x5b\x11\x3c\x06\x60\x37\x83\xd6\x51\xa6\x5b\x4f\x9d\xd2\xfb\x63\xf9\x03\x70\xb2\x1f\x8c\x95\x1c\x4c\xc7\xd8\xed\x0f\x26\x33\xe8\x47\x2f\x6f\x86\x13\x29\x47\x93\x61\xbf\x7b\x32\x83\xc1\xd1\xf9\xe9\x60\x94\x0c\x27\x93\x69\x77\x7a\xf6\xda\x40\xa8\xe4\x74\x9a\x4c\xa7\xdd\xc1\xe4\x0d\x94\x1c\x4c\xfa\xaa\x3f\x45\x86\xea\x97\xc7\x4f\xcd\xc7\x66\x83\x07\x8e\xf2\x20\xd6\x6b\x87\x6b\x41\x58\x56\x2d\x30\x0e\x2f\x12\x1e\x16\x71\xb3\xc1\xcf\x33\x78\x7c\x8a\x9a\xc1\x46\x8a\x2c\x5b\x1e\x72\x56\x35\x15\xce\x78\x78\x97\x88\xcc\xe3\xbb\xa0\x0b\x63\x4d\x97\x2f\x78\x1e\x1f\x01\x2f\x47\x7c\xe8\x6a\xa3\x70\x1f\x2e\xf0\x51\xa2\x9d\x27\x1e\xb3\x62\x13\x10\x45\xc2\xd3\xe4\xdd\x56\x64\x05\xbe\x8b\x40\xc7\x18\xc3\x06\x37\x5c\x54\xe1\x28\x6e\x36\x6a\x97\x33\x48\x0a\x53\x56\xca\xe6\x9e\x5c\xe7\xb1\xd9\x68\xf8\x9d\x26\x99\x1e\x1d\x48\xe1\x11\x5a\x17\xf3\xeb\xeb\xd6\x0c\x5e\xfe\x5c\xdc\xfe\x76\xd9\x9a\x35\x1b\x0d\x76\xb9\x16\x2c\x6d\xa5\x5c\x04\x5b\x91\x45\xa5\xbb\xea\xc7\x7f\x0f\x0f\xb6\xa0\xfa\xd7\x7f\x67\xb3\x32\x5e\x18\x9e\x43\xaf\x07\x9e\x84\x7c\x80\x9c\x1c\x90\x2d\xcd\x9a\xcf\xae\x7f\xbb\xbc\xbe\xfc\x3c\x5f\x5e\xbe\xa2\xb0\x58\xce\x97\x57\x17\xe5\xd1\x5f\x49\xfc\x1f\xfe\x07\x3f\xf3\xdf\x68\x3c\x35\x9f\x6f\x85\x9a\x9c\x37\x1b\x75\xd5\x3c\xf1\x9c\xf2\x3c\x8d\xc2\x18\xd1\x3c\x3c\xb9\x2c\x55\x6b\x86\x3e\xe7\x8e\xe1\x0e\x8a\x9b\x8d\x70\xff\x28\xdf\x5a\x45\xa1\xb9\x42\x86\xb7\xc2\xc1\x03\x1e\xe0\x03\xb4\x5a\xf0\x1e\xc8\x7e\xc1\x7d\x5b\xab\x0e\xbc\x87\x56\x97\x4f\xf8\xe6\x79\xb3\xd1\xa0\x54\xfb\x58\x2b\xff\xaf\x07\x3c\xfc\x1b\x3e\xc0\xeb\xff\xef\xa1\x0f\x7f\xfe\x09\xfd\x57\x34\x31\xe7\x85\xa1\xcd\xd6\x3e\xa0\x0a\x92\xe1\x01\x70\x00\x9b\x4b\xab\xaa\x8d\xc1\x11\xfc\xf3\x77\xc0\x3d\xca\x82\xd0\x07\xba\x98\x1f\xb1\xcd\xec\x3a\x02\xb5\xea\x00\xb3\xed\xf5\x60\xf1\xa0\xf3\xb0\xb8\x4a\x14\x5f\xc2\xf0\x46\x34\x96\x40\x1b\x42\x67\x44\x16\xa4\xed\xab\xf8\x24\xd5\x7c\x6b\xf5\x31\x6a\x6c\xf3\x98\xec\x82\x9c\x36\xeb\x76\xa7\xc3\x31\xea\x04\xda\x7f\x93\x54\xfa\xaa\xd2\x7f\x5e\x15\xe3\xd8\x75\xee\xb0\x2b\xed\x26\x0f\x5f\x19\x66\x6b\x65\xd8\xc3\x3e\x02\x4a\x2d\xef\x6f\x87\xf0\x9f\xc2\x13\x24\xc2\xc8\x67\xa2\x15\xbe\xf6\x77\x0e\x2b\x63\xd5\x26\x3b\x57\xca\xa1\xf7\x81\x51\x50\x42\xcc\x6d\xd6\xee\x77\x3a\x9d\x9f\xf1\xf8\x2c\xc2\xba\x7f\x15\x6b\xbd\xb7\xaa\x90\xb5\x59\x7c\x87\x0f\xf0\x06\x54\x12\x17\xaa\x13\x87\xf6\xbc\x4d\xda\xcf\x41\x87\xeb\x1f\x3f\xc0\xa8\x72\x59\x42\xdc\x26\xc9\x8f\x30\xde\xd8\x97\xca\x08\x22\x0b\x41\xb0\xce\xdd\x21\xf6\xbc\xa9\xda\x01\x24\xaa\xb0\xde\xc3\xa8\x13\x05\x6a\xdd\x51\xa7\x8a\xa7\x56\x4b\x22\x8a\x8c\x8e\xe5\xb2\x4b\xab\x4f\x02\x21\xa9\x10\x59\xa5\x10\xfe\xbc\xb1\x09\x08\x53\x8b\x28\x29\x97\x75\x23\xd8\xff\x50\x36\x50\xbb\x70\xe8\x7f\xe4\x83\x93\xc7\x7e\x6a\x3d\x85\x35\xbf\x42\xee\x29\x42\x27\xf8\x3b\xc7\x6e\xab\xae\xaa\xe6\x64\x80\x2b\xc7\x1f\xe7\xbf\x02\xae\x76\x15\x2f\x8c\xb0\x47\x1b\xe5\xf9\x11\x29\x49\xfb\x17\x1d\xd7\xfd\x6b\x0b\x1e\x99\x5c\x43\xee\x59\x10\x99\xb7\x55\x55\x24\xed\x63\x6d\xf2\x82\xe2\x0c\xcd\x9a\xd2\xe3\x0a\x1d\x25\xbd\xcc\xf4\xf3\xe5\x08\x4e\xa2\x90\xe8\xb7\xe6\xdd\x51\xe7\xf5\x60\xa9\x5b\xb8\x6c\xda\xa7\xe6\x7f\x03\x00\x00\xff\xff\x8b\x90\x53\x6e\x68\x0b\x00\x00")

func _4byte_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		__4byte_tracerJs,
		"4byte_tracer.js",
	)
}

func _4byte_tracerJs() (*asset, error) {
	bytes, err := _4byte_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4byte_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdc, 0x44, 0x40, 0x64, 0xa7, 0xa2, 0x19, 0xea, 0x36, 0x7, 0xf8, 0x62, 0x5, 0x90, 0xda, 0x9c, 0xc1, 0x71, 0xab, 0xc6, 0x14, 0x63, 0xe5, 0x52, 0x34, 0xb9, 0x53, 0x9b, 0x89, 0x2, 0x5b, 0xa4}}
	return a, nil
}

var _call_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x5a\x5f\x73\xdb\x38\x92\x7f\x96\x3e\x45\x8f\x1e\xc6\xd2\x5a\x91\x64\x67\x6f\xf6\xce\x1e\xcd\x95\xce\x71\x66\x5c\xe5\x8d\x53\xb6\xb2\x53\xa9\x54\x1e\x20\xb2\x29\x61\x4c\x01\x5c\x00\xb4\xac\xcd\xfa\xbb\x5f\x75\x03\xa0\x48\xfd\x71\x3c\xb9\x3f\x35\x55\xfb\xe2\x32\x05\x74\xa3\xd1\xfd\xeb\x1f\xba\x41\x0e\x87\x70\xa1\x8b\xb5\x91\xf3\x85\x83\xd3\xd1\xc9\x5f\x60\xba\x40\x98\xeb\x57\xe8\x16\x68\xb0\x5c\xc2\xa4\x74\x0b\x6d\x6c\x7b\x38\x84\xe9\x42\x5a\xc8\x64\x8e\x20\x2d\x14\xc2\x38\xd0\x19\xb8\xad\xf9\xb9\x9c\x19\x61\xd6\x83\xf6\x70\xe8\x65\xf6\x0e\x93\x86\xcc\x20\x82\xd5\x99\x5b\x09\x83\x67\xb0\xd6\x25\x24\x42\x81\xc1\x54\x5a\x67\xe4\xac\x74\x08\xd2\x81\x50\xe9\x50\x1b\x58\xea\x54\x66\x6b\x52\x29\x1d\x94\x2a\x45\xc3\x4b\x3b\x34\x4b\x1b\xed\xf8\xf9\xdd\x07\xb8\x46\x6b\xd1\xc0\xcf\xa8\xd0\x88\x1c\xde\x97\xb3\x5c\x26\x70\x2d\x13\x54\x16\x41\x58\x28\xe8\x17\xbb\xc0\x14\x66\xac\x8e\x04\xdf\x92\x29\x77\xc1\x14\x78\xab\x4b\x95\x0a\x27\xb5\xea\x03\x4a\xb2\x1c\x1e\xd0\x58\xa9\x15\xbc\x8e\x4b\x05\x85\x7d\xd0\x86\x94\x74\x85\xa3\x0d\x18\xd0\x05\xc9\xf5\x40\xa8\x35\xe4\xc2\x6d\x44\x5f\xe0\x90\xcd\xbe\x53\x90\x8a\x97\x59\xe8\x02\xc1\x2d\x84\xa3\x5d\xaf\x64\x9e\xc3\x0c\xa1\xb4\x98\x95\x79\x9f\xb4\xcd\x4a\x07\xbf\x5e\x4d\x7f\xb9\xf9\x30\x85\xc9\xbb\x8f\xf0\xeb\xe4\xf6\x76\xf2\x6e\xfa\xf1\x1c\x56\xd2\x2d\x74\xe9\x00\x1f\xd0\xab\x92\xcb\x22\x97\x98\xc2\x4a\x18\x23\x94\x5b\x83\xce\x48\xc3\x5f\x2f\x6f\x2f\x7e\x99\xbc\x9b\x4e\xfe\xeb\xea\xfa\x6a\xfa\x11\xb4\x81\xb7\x57\xd3\x77\x97\x77\x77\xf0\xf6\xe6\x16\x26\xf0\x7e\x72\x3b\xbd\xba\xf8\x70\x3d\xb9\x85\xf7\x1f\x6e\xdf\xdf\xdc\x5d\x0e\xe0\x0e\xc9\x2a\x24\xf9\xaf\xfb\x3c\xe3\xe8\x19\x84\x14\x9d\x90\xb9\x8d\x9e\xf8\xa8\x4b\xb0\x0b\x5d\xe6\x29\x2c\xc4\x03\x82\xc1\x04\xe5\x03\xa6\x20\x20\xd1\xc5\xfa\xc5\x41\x25\x5d\x22\xd7\x6a\xce\x7b\x3e\x08\x48\xb8\xca\x40\x69\xd7\x07\x8b\x08\x3f\x2e\x9c\x2b\xce\x86\xc3\xd5\x6a\x35\x98\xab\x72\xa0\xcd\x7c\x98\x7b\x75\x76\xf8\xd3\xa0\x4d\x3a\x13\x91\xe7\x53\x23\x12\x34\x14\x1c\x01\x59\x49\xee\xcf\xf5\x4a\x81\x33\x42\x59\x91\x50\xa8\xe9\xff\x84\xc1\x28\x1c\xe0\x23\x3d\x39\x4b\xa0\x05\x83\x85\x36\xf4\x7f\x9e\x47\x9c\x49\xe5\xd0\x28\x91\xb3\x6e\x0b\x4b\x91\x22\xcc\xd6\x20\xea\x0a\xfb\xf5\xcd\x10\x8c\x7c\xb8\x41\xaa\x4c\x9b\x25\xc3\x72\xd0\xfe\xd2\x6e\x05\x0b\xad\x13\xc9\x3d\x19\x48\xfa\x93\xd2\x18\x54\x8e\x5c\x59\x1a\x2b\x1f\x90\xa7\x80\x9f\x13\xfc\x79\xf9\xb7\xbf\x02\x3e\x62\x52\x7a\x4d\xad\x4a\xc9\x19\x7c\xfa\xf2\xf4\xb9\xdf\x6e\x19\x7c\x40\xe3\x30\xbd\xd0\x8a\xb7\x73\x06\x9d\x4e\xbf\xcd\x2b\xa6\x68\x13\x54\x29\xa6\xbc\xed\x7b\x0b\xab\x05\x3b\x1a\x56\x78\xf4\x80\xf0\x5b\x69\x5d\x6d\x4e\x66\xf4\x12\x84\x02\x5d\x52\x22\xd4\x9d\x26\x95\xd3\xac\x50\xd0\xff\x0a\x0d\x1b\x3a\x68\xb7\x2a\xe1\x33\xc8\x44\x6e\x91\xd6\x75\x7a\x62\x13\x29\xcf\x20\x2b\x15\x8b\x77\x17\xf8\xd8\x83\x2f\xed\x56\xeb\x41\x18\xb0\xce\xc0\x18\x3a\x9d\xf3\xf0\x2c\x61\x0c\xa3\x3e\xe4\x30\x86\x05\x3e\x0e\x72\x54\x73\xb7\xa0\x41\x99\x01\x49\x0e\x6c\x39\xa3\x44\x53\xf3\xee\xa8\x0f\xa7\x3d\x18\x8f\xc7\xd0\x19\x3d\x76\xbc\xca\x16\xc9\x9f\xd2\xfc\xa7\x76\xab\x45\xe0\xed\x9e\x83\x84\x1f\x21\x3f\x07\x79\x3c\x3e\x0d\xb3\x68\xa5\x44\xa7\x08\x63\xa2\x42\x8b\x57\xca\xd5\x94\x77\x25\x69\xee\xc3\xc9\x0f\x3d\xd2\xd4\x22\x1b\x8f\xc7\x70\xc7\xcb\x0e\xc8\x2f\x17\x0b\x61\x2e\x74\x8a\x5d\x52\xd2\xf3\xcb\xb5\x5b\x2d\x83\xae\x34\x8a\xf6\x74\xde\x6e\x3d\x05\xaf\x5b\x87\x05\x85\x58\xaa\x07\x7d\x4f\x7e\xd5\x86\xf2\xda\xac\x41\x17\x6c\x03\x83\x8f\x82\x5b\xc5\x16\xed\xa0\xdd\x22\xb9\x9a\xd7\x72\x3d\xef\x43\x3a\xf3\x1b\x20\xe6\x17\x85\x2b\x0d\x32\xc8\xd0\x18\x6d\x2c\xc8\xe5\x12\x53\x29\x1c\xe6\xeb\xe0\x4d\x1e\x80\x31\xe4\x7a\x3e\x98\xa3\xbb\xa4\xc7\x6e\x2f\xba\xd3\x8f\x7e\x37\x1e\x33\x25\x67\x52\x61\x1a\xfc\xe3\x16\xd2\x0e\x32\x51\xe6\xae\x5a\x97\x3d\xe1\x37\x18\xdd\x3b\x1c\xc2\xaf\x08\x5a\xe5\x6b\x48\x88\x7a\xc5\x8c\x38\xcb\xae\xad\xc3\x65\xd8\x9c\xed\x43\x26\x2c\x01\x48\x66\xb0\x42\x28\x0c\xbe\x4a\x16\x48\x80\x56\x09\x46\x0c\xac\x2d\x23\x7d\x0c\xb4\xda\x40\x17\x03\xa7\xdf\x95\xcb\x19\x9a\x6e\x0f\xbe\x87\xd1\x63\x36\xa2\x38\xf3\x3f\xd1\xf6\x20\x53\x8b\xa7\x2e\xc2\x46\x59\xde\x07\xab\xdb\xab\xd9\x7a\x95\x81\x00\x85\x2b\x48\x42\x6a\x50\x54\x66\x28\xd5\x1c\x12\x83\xc2\x61\xda\x07\x91\xa6\xe0\xb4\x4f\xc7\x2a\xf9\x9a\x4b\xc2\xf7\xdf\x43\x97\x16\x1b\xc3\xd1\xc5\xed\xe5\x64\x7a\x79\x04\xff\xfc\x27\x34\x7e\x39\x3d\xea\xd5\x2c\x93\xea\x26\xcb\x82\x71\xac\x70\x50\x20\xde\x77\x4f\x7a\x83\x07\x91\x97\x78\x93\x79\x33\xc3\xdc\x4b\x95\xc2\x38\xc8\x1c\x6f\xcb\x9c\x36\x64\x48\x68\x38\x84\x89\xb5\xb8\x9c\xe5\xb8\xcb\x52\x81\xc6\x98\xd1\xac\x23\x1a\x27\xf4\x25\x7a\x59\xe4\x48\xa8\xaa\x72\xc1\xbb\x9f\x2d\x6e\xb9\x75\x81\x67\x00\x00\xba\xe8\xf3\x0f\x84\x78\xfe\xc1\xe9\x5f\xf0\x91\x63\x14\x5d\x48\xa8\x9a\xa4\xa9\x41\x6b\xbb\xbd\x9e\x9f\x2e\x55\x51\xba\xb3\xc6\xf4\x25\x2e\xb5\x59\x0f\x2c\xb1\x74\x97\xb7\xd6\xf7\x3b\x8d\x32\x73\x61\xaf\x14\xc9\x04\xa4\xfe\x2c\x6c\x77\x33\x74\xa1\xad\x3b\x8b\x43\xf4\x10\xc7\xd8\x17\x24\x76\x34\x7a\x3c\xda\xf5\xd6\xa8\xb7\x41\xc2\xc9\x0f\x3d\x12\x79\x3a\xaf\xf0\x5d\x71\xe7\xa0\x28\xed\xa2\xcb\x70\xda\x8c\x6e\x88\x70\x0c\xce\x94\xb8\x17\xfe\x0c\xa9\x5d\x38\x59\xcc\x33\x62\x52\x67\xca\x84\x61\x35\x17\xcc\xb3\x9c\xe9\x82\x8e\x23\x5b\xce\xd8\xe7\x4e\xeb\x5d\x74\x05\x28\xdd\x5d\x5e\xbf\x7d\x73\x79\x37\xbd\xfd\x70\x31\x3d\xaa\xc1\x29\xc7\xcc\x91\x51\xcd\x3d\x6c\x98\x92\xd5\x35\x47\x3f\x91\xcc\xab\x93\xcf\xcc\x96\xdb\xc9\xde\x3a\x34\x17\xbe\x78\x6f\x3d\x3d\xaf\xd4\xff\xf2\x7b\x54\x47\x09\xf8\xf4\x79\xb3\xc0\x73\x53\x7d\x84\xbe\x78\x64\xea\xe2\xa9\xce\x46\x7b\x12\x7c\x89\x6e\xa1\x53\x66\xdc\x44\xf8\x23\x2b\x86\x26\xd5\x0a\x7f\x7f\x9a\x4f\xae\xaf\x1b\x49\x3e\xb9\xbe\xbe\xb8\x79\xd3\x48\xfc\x37\x97\xd7\x97\x3f\x4f\xa6\x97\xdb\x73\xef\xa6\x93\xe9\xd5\x05\xff\x1a\x39\x61\x38\x84\xbb\x7b\x59\x30\x75\x33\x21\xea\x65\xc1\x85\x79\x65\xaf\xed\x83\x5b\x68\x2a\x79\x4d\x38\x97\x33\xa1\x92\x78\x62\xd8\x88\x04\xa7\x09\x07\x3a\x26\xe0\x2e\xbf\xd4\xd1\xdf\xab\xb0\x21\xed\x7b\x83\x61\xd1\xb4\xeb\x74\xb4\x6b\xe3\x50\x1f\x11\x66\x55\x66\xae\xee\xcb\x37\x09\xff\x09\x23\x38\x83\x93\x40\x4f\xcf\xf0\xdf\x29\x1c\x93\xfa\x6f\x60\xc1\xd7\x7b\x24\xff\x98\x5c\xe8\x34\x4f\x8e\xd3\x9d\xfe\xff\xe7\x48\x5d\xba\x9b\x2c\x3b\x83\x6d\x27\xfe\x79\xc7\x89\xd5\xfc\x6b\x54\xbb\xf3\xff\x6d\x67\xfe\x86\x4f\x09\x55\xba\x80\xef\x76\x20\xe2\xd9\xec\xbb\xad\x3c\x08\xce\xe5\xaa\x91\xb5\xc1\xf8\x00\x83\x9f\x36\x31\x7c\x88\x2d\xfe\x47\x0c\xbe\xb7\xfa\xa5\x1a\xb7\x59\xdf\xf6\xc1\xa0\x33\x12\x1f\xa8\xb1\x3d\xb2\xac\x92\xda\x03\xbd\x12\x2a\xc1\x01\xfc\x8a\x5e\xa3\x42\x64\x72\x09\xed\x04\x15\x3e\x5c\x4a\x53\x4b\x10\x1a\x43\x86\x98\xe0\xaa\xdf\x20\x2c\xc5\x9a\x1a\xc3\xac\x54\xf7\x6b\x98\x0b\x0b\xe9\x5a\x89\xa5\x4c\xac\xd7\xc7\xad\x84\xc1\xb9\x30\xac\xd6\xe0\xdf\x4b\xb4\xd4\x65\x12\x90\x45\xe2\x4a\x91\xe7\x6b\x98\x4b\x6a\x15\x49\xba\x7b\xfa\x7a\x34\x02\xeb\x64\x81\x2a\xed\xc3\x0f\xaf\x87\x3f\xfc\x19\x4c\x99\x63\x6f\xd0\xae\xd1\x78\xb5\xd5\x58\x38\x67\xbe\xfa\x9a\xa3\x7b\x83\x85\x5b\x74\x7b\xf0\xd3\x81\x43\xe6\x00\xb9\xef\x9d\x0b\xaf\xe0\xe4\xf3\x80\xec\x1a\x37\x70\xeb\x23\x09\x98\x5b\x0c\xda\xa8\xbd\xbe\x79\x73\xd3\xbd\x17\x46\xe4\x62\x86\xbd\x33\x6e\xb7\xd9\x57\x2b\x11\xfa\x2d\x0a\x0a\x14\xb9\x90\x0a\x44\x92\xe8\x52\x39\x72\x7c\x6c\x9d\xf2\x35\xf1\xfb\x91\x8b\xfa\xb8\x33\x15\x49\x82\xd6\x46\xba\xe7\xa8\x91\x39\x62\x49\xd2\x20\x95\x95\x29\xd6\xa2\x42\xec\xa0\x99\x9a\xc3\x0c\x6a\xdc\xa3\xc2\xa5\xb6\xb4\xc8\x0c\x61\x65\xa8\xcd\xb3\x52\x25\x7c\xcf\x91\x22\x79\xdb\x82\x56\x20\x20\xd7\x7c\xb9\xc2\x39\x0e\xc2\xcc\xed\xc0\xf3\x3d\x2d\x4b\x9c\xa3\xf4\x6a\xd0\x04\x72\x1d\xaa\xdc\x39\x6d\xd5\x18\x0a\xf0\x51\x5a\xc7\xa5\x2a\x59\x29\x2d\x78\x24\x4b\x35\xef\x43\xa1\x0b\xe6\xe9\xaf\x1d\x67\x81\xac\x6f\x2f\xff\x76\x79\x5b\x55\x14\x2f\x0f\x62\x6c\x26\x3a\x55\x03\x0a\xb1\xd9\xec\x04\x16\xf0\xd0\xda\x6e\x41\x69\xd5\x4e\x87\xe9\xc2\x87\x3a\x4e\xfc\xca\xb2\x74\xfc\xd3\x11\xb7\xaf\xb0\x68\x1d\x58\xe9\xab\xbc\xcc\x96\x36\x91\x77\x58\xd7\x8b\x8d\x0c\x5a\xab\xa8\x36\x79\x66\x4f\x6e\x8d\x0f\xe4\x16\xb9\x7a\x53\x26\xbc\xaf\x45\x36\x17\xd6\x6d\x30\x3a\x47\xdf\x33\xd6\x63\x61\xcb\xdc\xd9\xad\x63\x6c\x9b\x27\x75\x11\x0f\x4b\x32\x8a\x19\x98\xce\xb8\xed\x6e\x66\xdf\xc0\x69\x45\xdc\x1e\x95\xae\x9e\x9d\x02\xfc\xa4\x1a\x4b\xf2\x78\x74\xa6\xf0\x01\x60\xdb\x75\xe9\x28\x33\xa8\x94\xd9\x9c\x03\x73\x61\x3f\x58\x4e\x80\x70\x12\xcc\xe4\x9c\xda\xf2\x38\x78\xa5\xe0\x15\xc4\x07\x3a\xdf\xe0\x55\x83\x50\xf6\x1c\x14\xad\x14\x73\x74\x08\x1b\x15\xe7\xb0\xf5\x13\x29\xf2\xee\x60\xa7\x19\x74\xbb\x75\xca\x28\x68\x23\x87\x7d\x67\xd0\x0d\xf0\xef\xa5\xc8\x6d\x77\x54\xd5\x4d\x7e\x07\x4e\xf3\x49\x3f\xae\xce\xfa\x08\x3a\x92\x69\x54\x62\x41\xa1\x17\x0b\xde\x88\x62\xe9\xcc\x1f\xe0\x29\x3e\xab\xa1\x89\xe3\x2a\x96\x21\x47\xf7\x66\x4c\x7d\x02\x74\xaa\xda\x28\x13\x32\x2f\x0d\x76\xce\x61\x0f\x03\xdb\xd2\x64\x22\xe1\x58\x5a\x04\xbe\x11\xb0\x60\xf5\x12\x17\x7a\x55\x83\xfc\x16\x8f\xef\x82\xa3\xc2\xc1\xd6\x49\xca\xf7\x7d\xc2\x42\x69\xc5\x1c\x6b\xe0\xa8\x1c\x1e\x03\xb5\xf7\x9a\xe2\x9b\xa1\x73\x5c\x3d\x7e\x05\x45\x7e\x95\xaf\x42\xe3\x39\x6c\xec\x8d\xf2\x4e\xc1\x17\x27\x71\xd9\x57\x7b\x88\xa6\xfa\xaa\xac\x42\xce\xef\x89\xfb\xff\x4d\xe0\x7d\xe4\xc3\xdf\x97\x26\xda\xf6\x5c\xbf\xc7\xe6\x64\xbf\xd3\x66\xe3\xf9\x3c\x0a\xaa\xd1\x43\x00\x38\x54\x44\x12\x54\xd5\x6f\x98\xb8\x0d\x5c\xb9\xee\xa3\xa7\xc2\xe0\x83\xd4\x25\x1d\xe9\xf8\x2f\xdf\x79\x57\x95\xf5\xd3\xe6\x5e\x93\x31\x51\xbf\xd8\x5c\x2d\xc2\xcb\x0a\x5f\x94\xd6\x8e\x26\xcd\x25\x4c\xb8\xee\xcc\xfc\x6b\x84\x16\xcb\x3f\x73\xc1\x19\x48\xc4\xe9\x82\xaa\xae\x70\xf2\xe5\x06\x45\xba\xae\xea\x8e\xbe\xaf\xf7\x60\x21\x54\x1a\x7a\x3e\x91\xa6\x92\xf4\x31\xc0\xc9\x42\x31\x17\x52\xb5\xf7\xba\xf1\xab\xc5\xce\x3e\xb8\xed\xb4\x10\xf5\x43\x3a\xf4\xea\xd4\x58\xb3\xc5\xed\x17\x1c\xc6\x5b\x09\xba\x7d\x57\x1b\xae\x7b\xb5\xb2\xe5\x92\x1b\x0e\x10\x0f\x42\xe6\x82\x9a\x5c\x2e\x64\x55\x0a\x49\x8e\x42\xf9\xd7\x56\x98\x39\xfd\x80\xc6\xb6\x5f\x90\x39\xdf\x92\x38\x5b\x8c\x1b\x1f\x83\x3b\x5e\x4e\x04\x2f\xa5\x01\xbf\xfd\xb7\xb9\x70\x2e\xc0\xab\xe6\x5e\x9f\xae\xd2\xf1\x1b\x4d\x54\xae\xfd\xb2\x3c\xe5\x7a\x8c\xe6\xfc\x04\xa3\x5a\xfb\xf3\xbf\x94\xb9\x7f\xc8\xc4\xdd\x85\xed\x75\x55\x4f\x06\x87\x3a\xad\xfb\x90\xa3\xe0\x06\x37\xbe\xc3\x8c\xad\xc4\x73\xfd\x76\x64\x04\x5f\x81\xee\x50\x02\xdf\x73\x2e\x30\x5e\x5e\xf9\xae\x6c\x86\xa8\x40\x3a\x34\x82\x5a\x59\x42\x6c\x78\xed\x46\x56\x5a\x56\xc7\xb1\x96\x94\xc8\x41\x71\x78\x07\x46\x85\x84\x54\xf3\x41\xbb\xe5\x7f\xaf\x71\x48\xe2\x1e\x1b\x1c\x22\x95\x74\x52\xe4\xf2\x1f\xb8\xf1\x33\xf0\x8d\x43\x95\x1f\xee\x31\xd6\xb9\x7b\xf2\xa3\x1a\x84\x51\xad\x94\xa7\x9f\xb9\xa5\x3f\x24\xe3\x07\xa1\xd3\xd9\x12\x3a\xd0\xcc\xc4\xa1\x5d\x81\x70\x39\x72\x40\x26\x5e\x9d\x6c\xdb\xc6\x19\x7d\x40\xc6\x67\xfb\x1e\x09\x9f\xcf\x87\xa5\x42\xbe\x6f\x4b\xfa\x26\xf7\x90\x5c\x18\xdd\xdd\x58\x2c\x87\x0e\xc8\x55\xd5\xd2\xae\x0b\xe5\xf2\x99\x58\xf1\x60\xc3\xc6\xad\x14\x19\x51\x3a\xef\x7f\xdd\xd5\x9c\xe4\xf3\xf8\xa9\x1d\x8b\x3f\x06\x60\xb8\x15\xac\x2e\x05\x23\x3e\xf8\xe2\x6c\xeb\x66\x30\xe2\xc0\xdf\xaa\x6d\xdd\x03\xfa\x88\xfb\xa1\xed\x77\x18\x55\x64\x1b\xdc\xcb\x53\xe7\xc2\x7a\x35\x5b\x6c\xed\x23\xd4\xdb\x2b\x40\x71\x3b\xdb\x2f\x40\x43\x7b\x84\xb6\xee\x26\xab\x38\xfa\x51\x1f\x9a\xb3\xfa\xa8\xff\x29\x6c\x54\x2e\x6b\xbe\x91\x4b\xf6\xcd\xd3\xf9\xa1\x68\x04\x5a\xdb\x7f\xce\x92\xcf\x2b\xde\x3b\x20\x7a\xfe\x5c\xac\x9f\x3d\xc5\x59\x7b\x3c\x74\x0f\x88\xb2\xf6\x5a\xa9\xed\x1e\x5f\xae\xb2\x9a\x5c\x37\xb1\x31\x67\x9f\x92\x70\x04\x86\x79\xde\xb3\xe7\x5b\x39\x10\x8b\x7d\xe8\xe0\xc3\xf2\x0c\xf6\x5c\xc7\x04\x65\x5e\xfc\x17\x7c\xac\xfa\x8e\x5a\xb8\x36\x17\xb7\x71\x56\x68\x45\x4e\xfb\x27\xfe\x7d\x6b\x67\xf4\xef\xc9\xeb\xbf\xfc\x87\x18\x45\x7d\xad\x14\xb9\xa6\xba\xc9\x32\x8b\x6e\x7c\x32\xf2\x15\xbd\x7f\x1f\xef\x7f\xac\xbf\x51\x0f\x68\xeb\x8c\x1e\x3b\xc7\xdb\x8b\x34\x34\xf5\x1b\x4f\xc7\xaf\x4f\xff\x74\x5a\xef\xc4\x62\xd7\xe3\xd7\xb9\xf6\x55\xda\xb7\xac\xc3\x9a\xf7\x2c\xf6\xcc\x8a\xc2\xd0\x96\xf6\x88\xd4\x37\xfd\xa7\x53\x3f\x1d\xf9\xa5\x85\x17\x3a\x86\xba\xb9\x71\x46\xed\xa6\xc9\x2f\x15\xb1\x17\x3e\x93\xd8\x09\x06\x2b\xeb\xa3\x4a\x7b\xb5\xbe\x25\xa0\x23\x86\x9b\x78\xa9\x13\x3b\xec\xce\x19\xec\xbd\xce\xea\x43\x67\x89\x96\xda\xec\xe6\x0c\x6f\xc6\x53\xc4\x58\xf8\x84\xc1\x7f\x00\x40\x87\xaf\xfc\x07\x06\xd4\xd6\x8f\xfa\x38\x04\x06\xfd\xbb\x73\x6e\xf2\xe9\xa4\xd7\x33\x6e\xa8\x4a\x4b\x9b\xdb\x1c\xe1\x29\x5a\x69\x30\x85\x4c\x62\x9e\x82\x4e\xd1\xf0\x55\xe8\x6f\x56\x2b\xff\x95\x04\x1a\x3e\xa8\xfd\x27\x32\xfe\x6b\x35\xfe\x70\x47\xc9\x04\xdd\x1a\x32\x14\xfc\xb9\x83\xd3\x50\x08\x6b\x61\x89\x42\x49\x35\xcf\xca\x3c\x5f\x83\x36\x29\x92\xf2\xea\x0a\x8c\xaa\x07\x0d\xa5\x45\x63\x61\xb5\xd0\xa1\x4b\xe0\xce\xb7\xa0\x46\x5e\xba\x7e\xb8\xf0\x97\xb6\xc8\xc5\x1a\xa4\xa3\x8e\x24\x6c\xaa\x5e\x50\x54\xdf\x18\xf0\x87\x0a\x3a\xba\xbb\x79\x0c\xc4\xcb\xb2\xe6\x39\xc0\x3f\xd3\x53\xf3\x04\x08\x77\x45\x4d\xee\xdf\xbc\x0a\x69\x12\x7d\xac\x9a\x9b\x6c\x5e\xaf\xc1\x9b\x94\xcd\x23\xfc\xd4\x24\xeb\xda\x1d\x04\x0f\x30\x85\x54\x02\xfc\xb4\x45\xdf\x6c\x65\xe0\x6f\xff\x99\x51\x35\x9d\x9f\xfa\x1e\x88\x1e\x64\xc1\xa4\xaa\x2d\xab\x7f\x7f\x43\x8e\xbb\xc7\x35\x15\x94\xde\x7f\xb5\x8a\xdb\xff\xf0\xe9\x1e\xd7\x07\xca\xec\x40\x87\xb5\x79\x55\x16\x44\x46\xf4\x63\xcf\x1c\x24\x95\x15\x72\x3c\x3a\x07\xf9\x63\x5d\x20\x36\x05\x20\x8f\x8f\xe3\x9a\xf5\xf1\x4f\xf2\x73\xcc\xd0\x2a\x1b\xb6\xc6\x7b\x0d\x8b\xe2\x27\x40\x3c\x87\x12\xa6\xfd\xd4\xfe\xef\x00\x00\x00\xff\xff\x09\xeb\xc5\x3c\xa8\x29\x00\x00")

func call_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_call_tracerJs,
		"call_tracer.js",
	)
}

func call_tracerJs() (*asset, error) {
	bytes, err := call_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "call_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x19, 0x2d, 0x73, 0x11, 0x42, 0x6e, 0x53, 0x86, 0xeb, 0xf0, 0x3e, 0x94, 0x9f, 0xd2, 0x67, 0x34, 0x14, 0xe1, 0x35, 0x63, 0x1f, 0x94, 0x78, 0xf3, 0x80, 0x51, 0xdb, 0x5c, 0x1b, 0xbf, 0x7f, 0x25}}
	return a, nil
}

var _evmdis_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\xdf\x6f\xda\xca\x12\x7e\x86\xbf\x62\x94\x27\x50\x29\x60\x63\x08\x38\x27\x47\xe2\xa6\xf4\x1c\xae\xd2\x24\x02\x72\x8f\x2a\x94\x87\x05\xc6\xb0\xaa\xf1\x5a\xbb\x6b\x72\xb8\x55\xfe\xf7\xab\xd9\x59\x03\xf9\x75\xdb\x4a\xa7\x0f\x3b\xb5\x77\xbe\x6f\xbe\x9d\x19\xcf\x92\x56\x0b\xae\x54\xbe\xd7\x72\xbd\xb1\x10\xb6\x83\x73\x98\x6d\x10\xd6\xea\x23\xda\x0d\x6a\x2c\xb6\x30\x2c\xec\x46\x69\x53\x6d\xb5\x60\xb6\x91\x06\x12\x99\x22\x48\x03\xb9\xd0\x16\x54\x02\xf6\x85\x7f\x2a\x17\x5a\xe8\x7d\xb3\xda\x6a\x31\xe6\xcd\x6d\x62\x48\x34\x22\x18\x95\xd8\x47\xa1\x31\x86\xbd\x2a\x60\x29\x32\xd0\xb8\x92\xc6\x6a\xb9\x28\x2c\x82\xb4\x20\xb2\x55\x4b\x69\xd8\xaa\x95\x4c\xf6\x44\x29\x2d\x14\xd9\x0a\xb5\x0b\x6d\x51\x6f\x4d\xa9\xe3\x8f\x9b\x7b\xb8\x46\x63\x50\xc3\x1f\x98\xa1\x16\x29\xdc\x15\x8b\x54\x2e\xe1\x5a\x2e\x31\x33\x08\xc2\x40\x4e\x6f\xcc\x06\x57\xb0\x70\x74\x04\xfc\x4c\x52\xa6\x5e\x0a\x7c\x56\x45\xb6\x12\x56\xaa\xac\x01\x28\x49\x39\xec\x50\x1b\xa9\x32\xe8\x94\xa1\x3c\x61\x03\x94\x26\x92\x9a\xb0\x74\x00\x0d\x2a\x27\x5c\x1d\x44\xb6\x87\x54\xd8\x23\xf4\x27\x12\x72\x3c\xf7\x0a\x64\xe6\xc2\x6c\x54\x8e\x60\x37\xc2\xd2\xa9\x1f\x65\x9a\xc2\x02\xa1\x30\x98\x14\x69\x83\xd8\x16\x85\x85\xbf\xc6\xb3\x3f\x6f\xef\x67\x30\xbc\xf9\x0a\x7f\x0d\x27\x93\xe1\xcd\xec\xeb\x05\x3c\x4a\xbb\x51\x85\x05\xdc\x21\x53\xc9\x6d\x9e\x4a\x5c\xc1\xa3\xd0\x5a\x64\x76\x0f\x2a\x21\x86\x2f\xa3\xc9\xd5\x9f\xc3\x9b\xd9\xf0\x5f\xe3\xeb\xf1\xec\x2b\x28\x0d\x9f\xc7\xb3\x9b\xd1\x74\x0a\x9f\x6f\x27\x30\x84\xbb\xe1\x64\x36\xbe\xba\xbf\x1e\x4e\xe0\xee\x7e\x72\x77\x3b\x1d\x35\x61\x8a\xa4\x0a\x09\xff\xe3\x9c\x27\xae\x7a\x1a\x61\x85\x56\xc8\xd4\x94\x99\xf8\xaa\x0a\x30\x1b\x55\xa4\x2b\xd8\x88\x1d\x82\xc6\x25\xca\x1d\xae\x40\xc0\x52\xe5\xfb\x9f\x2e\x2a\x71\x89\x54\x65\x6b\x77\xe6\x77\x1b\x12\xc6\x09\x64\xca\x36\xc0\x20\xc2\x6f\x1b\x6b\xf3\xb8\xd5\x7a\x7c\x7c\x6c\xae\xb3\xa2\xa9\xf4\xba\x95\x32\x9d\x69\xfd\xde\xac\x12\x27\xee\xb6\x2b\x69\x66\x5a\x2c\x51\x83\x46\x5b\xe8\xcc\x80\x29\x92\x84\xfc\x2c\xc8\x2c\x51\x7a\xeb\xda\x04\x12\xad\xb6\x20\xc0\x92\x2f\x58\x05\x39\x6a\xda\xf4\x14\x1f\x8d\xdd\xa7\x4e\xe6\x4a\x1a\x61\x0c\x6e\x17\xe9\xbe\x59\xfd\x5e\xad\x18\x2b\x96\xdf\x62\x98\x7f\x57\xb9\x89\x61\xfe\xf0\xf4\xd0\xa8\x56\x2b\x59\x5e\x98\x0d\x9a\x18\xbe\xb7\x63\x68\x37\x20\x88\x21\x68\x40\xe8\xd6\x8e\x5b\x23\xb7\x76\xdd\xda\x73\xeb\xb9\x5b\xfb\x6e\x1d\xb8\x35\x68\xb3\x61\x74\xc0\x6e\x01\xfb\x05\xec\x18\xb0\x67\xc8\x9e\xa1\x8f\xc3\x81\x42\x8e\x14\x72\xa8\x90\x63\x85\xcc\xd2\x61\x97\x88\x59\x22\x66\xe9\x32\x4b\x97\x59\xba\xec\xd2\x65\x96\xae\x17\xdc\x75\xe7\xe9\x32\x4b\xf7\x9c\x9f\x98\xa5\xcb\x2c\x3d\x3e\x72\x8f\x01\x3d\x7f\x44\x06\xf4\x58\x7c\x8f\x01\x3d\x06\xf4\x19\xd0\xe7\xb0\xfd\x90\x9f\x3a\x6c\x98\xa5\xcf\x61\xfb\x3d\x36\x1c\xb6\xcf\x2c\x7d\x66\x19\xb0\xf8\x41\xe0\xf6\x06\x1c\x6f\xc0\xf1\x06\x3e\xab\x65\x5a\x7d\x5e\xdb\x3e\xb1\xed\xd0\xdb\x8e\xb7\x91\xb7\x5d\x6f\x7d\xe6\xdb\x3e\xf5\x6d\x9f\xfb\xb6\xe7\x3b\xd4\xc9\xf3\x05\x9e\x2f\xf0\x7c\x81\xe7\x0b\x3c\x5f\x59\xc9\xb2\x94\x65\x2d\x7d\x31\x03\x5f\xcd\xc0\x97\x33\xf0\xf5\x0c\x7c\x41\x03\x5f\xd1\xc0\x97\x34\xf0\x35\x0d\x42\xcf\x17\xf6\x63\x08\xc9\x0e\x62\xe8\x34\x20\xe8\xb4\x63\x88\xc8\x06\x31\x74\xc9\x86\x31\xf4\xc8\x76\x62\x38\x27\x1b\xc5\xd0\x27\xdb\x8d\x61\x40\x96\xf8\xa8\x6b\x3b\x44\x48\x8c\x1d\x52\x48\x94\x1d\x92\x48\x9c\x11\x69\x24\xd2\x88\x44\x12\x6b\x44\x2a\x89\x36\x22\x99\xc4\x1b\x45\xac\x23\xea\xb2\x8e\xa8\xc7\x3a\xa2\x73\xd6\x41\xdd\xe7\x00\x03\xd6\x41\xfd\x47\x3a\xa8\x01\x49\x87\xeb\x40\xd2\xe1\x7a\x90\x74\xb8\x2e\x24\x4a\xea\x43\xa7\xc3\x75\x22\x91\x52\x2f\x3a\x1d\xae\x1b\x89\xd6\xf5\x23\xf1\xfa\x8e\x0c\x7a\x81\xb7\xa1\xb7\x1d\x6f\x23\x67\xc3\xc8\x7f\x45\x91\xff\x8c\x22\xff\x1d\x45\x1d\xbf\xef\xfd\xdc\x47\xf0\x44\xdf\x79\xab\x05\x1a\x4d\x91\x5a\x1a\xfe\x32\xdb\xa9\x6f\x34\x9e\x37\x98\x81\x48\x53\x37\xc7\x54\xbe\x54\x2b\x34\x3c\x1f\x17\x88\x19\x48\x8b\x5a\xd0\x05\xa1\x76\xa8\xe9\x6e\x2c\x27\x93\xa3\x23\x4c\x22\x33\x91\x96\xc4\x7e\x86\xd2\x60\x92\xd9\xba\x59\xad\xf0\xfb\x18\x92\x22\x5b\xd2\xe8\xaa\xd5\xe1\xbb\xa7\x00\xbb\x91\xa6\xe9\x46\xd2\xbc\xfd\xd0\x54\xb9\xb9\x80\x52\x67\x22\xde\x92\x49\xd4\x62\x69\x0b\x91\x02\xfe\x8d\xcb\xc2\xcd\x42\x95\x80\xc8\xbc\x72\x48\x78\xe0\x57\x1c\xfe\x24\x6a\xaa\xd6\x0d\x58\x2d\x28\x78\x19\xc2\x58\xcc\x4f\x23\xd0\xb5\x81\x3b\xd4\xfb\x92\xcb\x5d\x83\x14\xf2\x3f\x5f\x7c\x38\x24\x6a\xc2\xbd\xc9\x5c\xad\x54\x76\x42\x43\xa2\xc5\x16\xe1\xf2\xf4\x74\xc7\xff\x36\x53\xcc\xd6\x76\x03\x1f\x21\x78\xb8\xa8\x7a\x04\x6a\xad\x34\x5c\x42\xaa\xd6\xcd\x35\xda\x11\x3d\xd6\xea\x17\xd5\x4a\x45\x26\x50\x73\xbb\x4c\x5f\x71\xdc\xf3\x33\xf7\xea\xec\x01\x2e\x19\x4a\x9e\x4f\x80\xa9\x41\x20\x80\xa7\xf9\x84\xb9\xdd\xd4\xea\x70\x79\x2a\xc5\xc7\xf7\x74\x2a\xa7\x4b\x05\x2e\xf9\xa9\xa2\xf2\x18\xe8\x1f\x11\xa8\xbc\x69\xd5\x4d\xb1\x5d\xa0\xae\xd5\x1b\x6e\x7b\x45\x84\x10\xc3\x73\x7e\xde\x2b\xcb\x3c\x7f\x70\xcf\x4f\x24\xc9\xa9\x77\x8a\xa9\xb6\xe5\xc9\x7f\x87\xb6\x8f\xee\xce\x9e\x6b\xdc\xa9\x1c\x2e\xe1\xe0\x38\x7f\x05\xe1\x64\x11\x22\x51\xba\x46\x28\x09\x97\xd0\xbe\x00\x09\xbf\xf1\xd9\xfc\x0d\x36\x67\xb6\xa6\xca\x1f\x2e\x40\x7e\xf8\x50\x77\xa0\x8a\x7f\xcb\x1a\x9b\xe4\xea\x72\xc4\x09\xc9\x11\xbf\xd5\x64\xbd\x69\xd5\xd4\x6a\x99\xad\x6b\x41\xaf\xee\x72\x5f\x79\xa2\xc5\x3c\x4a\xbb\x64\x7f\x97\x12\xef\x54\xf7\x67\x58\x0a\x83\x70\x76\x35\xbc\xbe\x3e\x8b\xe1\xf8\x70\x75\xfb\x69\x74\x16\x1f\x0e\x29\x33\x63\xe9\xe7\x2b\x97\xf8\x24\x6e\xa7\xde\xdc\x89\xb4\xc0\xdb\x84\xeb\x7d\x70\x97\xff\xc5\xd7\xde\xd1\x2b\x6f\x2e\xe0\xfc\x6c\x2d\x8c\x6b\x87\x17\x80\xf6\xbb\x00\xab\xde\xf2\x0f\x9e\xa7\xe1\x39\xc4\x31\xbd\x85\x0a\x4f\x50\x2f\x30\x32\xcb\x0b\x7b\xc0\x6c\x71\xab\xf4\xbe\x69\xe8\x87\x4f\xcd\xe7\xa4\x71\x48\xce\x07\x7f\xee\x17\x14\xc7\x5e\xcf\x8a\x34\x7d\xbe\xc7\x73\xe4\x9d\x4d\x95\x73\x4e\xe6\xbe\x77\x4e\x3e\x02\xd7\x02\xec\xe7\xa3\x2d\x34\x8a\x6f\x17\xc7\x8a\x7e\x1a\x5d\x8f\xfe\x18\xce\x46\xcf\x2a\x3b\x9d\x0d\x67\xe3\x2b\x7e\xf5\xe3\xda\x86\xbf\x54\xdb\xd7\x9d\x70\x3c\x87\x3b\x06\xbc\x6a\xc1\xb7\x5b\xe0\x97\x7b\xe0\x97\x9a\xe0\x58\xd0\x7f\xa2\xa2\xff\xbf\xa4\xff\x74\x4d\x27\xa3\xd9\xfd\xe4\xe6\xa4\x74\xf4\xe7\xca\x4f\x7c\x33\xde\xf5\xed\xba\x05\xaf\xdc\x79\x7c\xf9\x2b\xee\x8d\xc6\x57\x85\x6d\xb8\xd0\x1f\x4a\xd6\x77\xf4\x4e\x67\xb7\x77\xc7\xde\xbb\x1f\x5f\x8d\x0f\x43\xe5\x47\x31\xda\x0d\x68\xbf\xc3\xfa\xef\xfb\x2f\x77\x9f\x46\xd3\x99\x67\x2a\x33\x9b\x2f\x0f\x9f\xe9\x1a\xed\xdd\x55\xed\x64\x06\xca\xa4\x9c\x7f\xd2\xdc\x51\x9a\xcb\xe9\x77\x40\xa7\x98\x1d\xe0\xcf\x6e\x0e\xf8\x08\xed\xbf\xbb\x78\xe4\x3a\x0e\xf7\x97\x05\xf3\x37\x98\x23\x3e\xd6\xf5\xd9\x45\x7a\x3c\xdd\xf3\x3b\x88\xf1\xd5\xca\x53\xf5\xa9\xfa\xbf\x00\x00\x00\xff\xff\x51\x4b\xdc\x7e\x62\x10\x00\x00")

func evmdis_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_evmdis_tracerJs,
		"evmdis_tracer.js",
	)
}

func evmdis_tracerJs() (*asset, error) {
	bytes, err := evmdis_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "evmdis_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd5, 0xe8, 0x96, 0xa1, 0x8b, 0xc, 0x68, 0x3c, 0xe8, 0x5d, 0x7e, 0xf0, 0xab, 0xfe, 0xec, 0xd1, 0xb, 0x3d, 0xfc, 0xc7, 0xac, 0xb5, 0xa, 0x41, 0x55, 0x0, 0x3a, 0x60, 0xa7, 0x8e, 0x46, 0x93}}
	return a, nil
}

var _noop_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x4f\x6f\xdb\x46\x10\xc5\xcf\xe6\xa7\x78\xc7\x04\x50\xc5\xfe\x39\x14\x70\x8b\x02\xac\x61\x27\x2a\x1c\xd9\x90\xe8\x06\x3e\x0e\xc9\xa1\xb8\xe9\x6a\x87\x9d\x9d\x95\x22\x04\xf9\xee\xc5\x92\x52\x13\x14\x69\x9b\x9b\xb0\xd2\xfb\xbd\x37\xf3\x46\x65\x89\x1b\x19\x4f\xea\x76\x83\xe1\xfb\x6f\xbf\xfb\x11\xf5\xc0\xd8\xc9\x37\x6c\x03\x2b\xa7\x3d\xaa\x64\x83\x68\x2c\xca\x12\xf5\xe0\x22\x7a\xe7\x19\x2e\x62\x24\x35\x48\x0f\xfb\xc7\xef\xbd\x6b\x94\xf4\xb4\x2c\xca\x72\xd6\x7c\xf1\xeb\x4c\xe8\x95\x19\x51\x7a\x3b\x92\xf2\x35\x4e\x92\xd0\x52\x80\x72\xe7\xa2\xa9\x6b\x92\x31\x9c\x81\x42\x57\x8a\x62\x2f\x9d\xeb\x4f\x19\xe9\x0c\x29\x74\xac\x93\xb5\xb1\xee\xe3\x25\xc7\xab\xf5\x13\xee\x39\x46\x56\xbc\xe2\xc0\x4a\x1e\x8f\xa9\xf1\xae\xc5\xbd\x6b\x39\x44\x06\x45\x8c\xf9\x25\x0e\xdc\xa1\x99\x70\x59\x78\x97\xa3\x6c\xcf\x51\x70\x27\x29\x74\x64\x4e\xc2\x02\xec\x72\x72\x1c\x58\xa3\x93\x80\x1f\x2e\x56\x67\xe0\x02\xa2\x19\xf2\x82\x2c\x0f\xa0\x90\x31\xeb\x5e\x82\xc2\x09\x9e\xec\x93\xf4\x2b\x16\xf2\x69\xee\x0e\x2e\x4c\x36\x83\x8c\x0c\x1b\xc8\xf2\xd4\x47\xe7\x3d\x1a\x46\x8a\xdc\x27\xbf\xc8\xb4\x26\x19\xde\xae\xea\xd7\x0f\x4f\x35\xaa\xf5\x33\xde\x56\x9b\x4d\xb5\xae\x9f\x7f\xc2\xd1\xd9\x20\xc9\xc0\x07\x9e\x51\x6e\x3f\x7a\xc7\x1d\x8e\xa4\x4a\xc1\x4e\x90\x3e\x13\xde\xdc\x6e\x6e\x5e\x57\xeb\xba\xfa\x75\x75\xbf\xaa\x9f\x21\x8a\xbb\x55\xbd\xbe\xdd\x6e\x71\xf7\xb0\x41\x85\xc7\x6a\x53\xaf\x6e\x9e\xee\xab\x0d\x1e\x9f\x36\x8f\x0f\xdb\xdb\x25\xb6\x9c\x53\x71\xd6\xff\xff\xce\xfb\xa9\x3d\x65\x74\x6c\xe4\x7c\xbc\x6c\xe2\x59\x12\xe2\x20\xc9\x77\x18\xe8\xc0\x50\x6e\xd9\x1d\xb8\x03\xa1\x95\xf1\xf4\xd5\xa5\x66\x16\x79\x09\xbb\x69\xe6\x7f\x3d\x48\xac\x7a\x04\xb1\x05\x22\x33\x7e\x1e\xcc\xc6\xeb\xb2\x3c\x1e\x8f\xcb\x5d\x48\x4b\xd1\x5d\xe9\x67\x5c\x2c\x7f\x59\x16\x99\x19\x44\xc6\x5a\xa9\x65\xcd\xe5\xbc\x4b\xd1\x26\x76\x43\xca\x8d\x04\x46\x23\xce\xb3\x8e\xb9\x65\xb4\xd2\xe5\x01\xfe\x4c\x4e\xb9\x43\xaf\xb2\x07\xe1\x37\x3a\xd0\xb6\x55\x37\x5a\xc6\x49\xf3\x8e\x5b\x83\xc9\x5c\x21\x35\x7e\x3a\x47\x82\x29\x85\x48\x6d\xbe\x9b\xfc\xb9\x65\x5d\x16\x1f\x8a\xab\xb2\x44\x34\x1e\xb3\xb7\x0b\x07\xf9\x23\x73\x45\x73\x9f\x7a\x82\x8c\x93\xe3\x74\x19\x39\xd4\xef\x6f\xc0\xef\xb9\x4d\xc6\x71\x59\x5c\x65\xdd\x35\xfa\x14\x26\xe8\x0b\x2f\xbb\x05\xba\xe6\x25\x3e\xe0\xe3\xa2\x98\xc8\x3d\x25\x6f\x9f\xa3\x8f\xc3\xf9\x4c\xa8\xb5\x44\xfe\x4c\xcb\x91\xa4\x07\x85\x8b\x61\x3f\x17\x78\x35\xe9\xff\xdb\x42\x39\x7e\xc9\x83\xbc\x9f\x7c\x66\x60\x9c\xab\x6f\x98\x03\x9c\xb1\x52\xbe\x7d\x39\xb0\xe6\xbf\x3d\x94\x2d\x69\x88\x13\x2e\x6b\x7a\x17\xc8\x5f\xc0\xe7\xf3\xc8\x1b\x73\x61\xb7\x2c\xae\xe6\xf7\xcf\x42\xb5\xf6\xfe\xef\x50\xc5\xc7\xe2\xaf\x00\x00\x00\xff\xff\x13\x5b\x7d\x37\xec\x04\x00\x00")

func noop_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_noop_tracerJs,
		"noop_tracer.js",
	)
}

func noop_tracerJs() (*asset, error) {
	bytes, err := noop_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "noop_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4d, 0xcc, 0x83, 0xe9, 0x9e, 0xc1, 0x56, 0x41, 0x6c, 0x6a, 0x3b, 0x46, 0xc9, 0x5f, 0xe1, 0x5b, 0xcd, 0x6b, 0x53, 0x45, 0xcd, 0xfe, 0x1e, 0x86, 0x8c, 0x6b, 0xb, 0x70, 0x73, 0x9f, 0x4c, 0xb1}}
	return a, nil
}

var _opcount_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\xcf\x6e\xdb\x46\x10\x87\xcf\xe2\x53\xfc\x8e\x09\xa2\x92\x69\x7b\x28\xe0\x16\x05\x58\xc3\x4e\x04\xd8\xb2\x21\xd1\x09\x7c\x5c\x92\x43\x71\x9b\xd5\x2e\x31\x3b\x2b\x86\x08\xfc\xee\xc5\x2e\xc5\xc6\x08\x5c\xd4\xd7\xd5\xcc\xf7\xcd\x3f\xb1\x28\x70\xe9\x86\x89\xf5\xa1\x17\xfc\xf2\xfe\xe7\xdf\x50\xf5\x84\x83\xfb\x89\xa4\x27\xa6\x70\x44\x19\xa4\x77\xec\xb3\xa2\x40\xd5\x6b\x8f\x4e\x1b\x82\xf6\x18\x14\x0b\x5c\x07\xf9\x21\xde\xe8\x9a\x15\x4f\x79\x56\x14\x73\xce\x8b\x3f\x47\x42\xc7\x44\xf0\xae\x93\x51\x31\x5d\x60\x72\x01\x8d\xb2\x60\x6a\xb5\x17\xd6\x75\x10\x82\x16\x28\xdb\x16\x8e\x71\x74\xad\xee\xa6\x88\xd4\x82\x60\x5b\xe2\xa4\x16\xe2\xa3\x5f\xea\xf8\xb0\x7d\xc0\x0d\x79\x4f\x8c\x0f\x64\x89\x95\xc1\x7d\xa8\x8d\x6e\x70\xa3\x1b\xb2\x9e\xa0\x3c\x86\xf8\xe2\x7b\x6a\x51\x27\x5c\x4c\xbc\x8e\xa5\xec\xcf\xa5\xe0\xda\x05\xdb\x2a\xd1\xce\xae\x41\x3a\x56\x8e\x13\xb1\xd7\xce\xe2\xd7\x45\x75\x06\xae\xe1\x38\x42\xde\x28\x89\x0d\x30\xdc\x10\xf3\xde\x42\xd9\x09\x46\xc9\xf7\xd4\x57\x0c\xe4\x7b\xdf\x2d\xb4\x4d\x9a\xde\x0d\x04\xe9\x95\xc4\xae\x47\x6d\x0c\x6a\x42\xf0\xd4\x05\xb3\x8e\xb4\x3a\x08\x3e\x6f\xaa\x8f\x77\x0f\x15\xca\xed\x23\x3e\x97\xbb\x5d\xb9\xad\x1e\x7f\xc7\xa8\xa5\x77\x41\x40\x27\x9a\x51\xfa\x38\x18\x4d\x2d\x46\xc5\xac\xac\x4c\x70\x5d\x24\xdc\x5e\xed\x2e\x3f\x96\xdb\xaa\xfc\x6b\x73\xb3\xa9\x1e\xe1\x18\xd7\x9b\x6a\x7b\xb5\xdf\xe3\xfa\x6e\x87\x12\xf7\xe5\xae\xda\x5c\x3e\xdc\x94\x3b\xdc\x3f\xec\xee\xef\xf6\x57\x39\xf6\x14\xab\xa2\x98\xff\xff\x33\xef\xd2\xf6\x98\xd0\x92\x28\x6d\xfc\x32\x89\x47\x17\xe0\x7b\x17\x4c\x8b\x5e\x9d\x08\x4c\x0d\xe9\x13\xb5\x50\x68\xdc\x30\xbd\x7a\xa9\x91\xa5\x8c\xb3\x87\xd4\xf3\x7f\x1e\x24\x36\x1d\xac\x93\x35\x3c\x11\xfe\xe8\x45\x86\x8b\xa2\x18\xc7\x31\x3f\xd8\x90\x3b\x3e\x14\x66\xc6\xf9\xe2\xcf\x3c\x8b\x4c\x37\x34\x2e\x58\xa9\x58\x35\xc4\x71\x3f\x0a\x5e\x1d\x07\x43\x90\xf9\x29\xed\xe5\xef\xe0\x05\x29\xd0\x27\xb5\x0d\xc7\x9a\x38\x16\xaf\xad\x17\x0e\x4d\xbc\x87\xf4\xf7\xa1\xaf\xd4\xa4\xdd\xd6\x53\x8a\xbc\xfa\x74\x8b\x9a\xba\x38\x99\x74\xc9\xac\xac\x57\x29\x3c\x5d\xb5\xb6\x4a\xa8\xcd\xb3\x6f\xd9\xaa\x28\x66\x43\x12\x7f\xf9\xd1\x13\x39\xcf\x5d\xff\x8a\xf2\x6c\x95\xd2\x2e\xf0\x7e\x9d\x25\x8a\x17\x1a\x62\x27\xda\x9e\xdc\x17\x6a\xd3\x6a\xe8\x44\x3c\xa5\x66\xdb\xf3\xa9\x45\xfc\xa7\xdb\x05\xe3\xf3\x6c\x15\xf3\x2e\xd0\x05\x9b\x0c\x6f\x8c\x3b\xac\xd1\xd6\x6f\xf1\x0d\xd2\x6b\x9f\x27\xcb\xbb\x77\x78\x3a\x6b\x3a\x15\x8c\x3c\xf7\x8c\xfd\xf9\x08\x55\x23\x41\x99\x33\x3a\x76\xea\x3a\x28\xbb\xd8\xbb\xf9\x3c\x56\x29\xff\x65\xdf\xa2\x60\xf2\x2f\x39\x94\x31\xc9\x33\x03\xfd\x7c\x58\x35\x91\x85\x16\xe2\x38\x50\xb8\x13\x71\xfc\xa8\x80\x49\x02\x5b\x9f\x70\x31\xa7\xd3\x56\x99\x05\x7c\x3e\xbe\x38\x70\x6d\x0f\x79\xb6\x9a\xdf\x9f\x15\xd5\xc8\xd7\xa5\xa8\x99\xf4\x6c\x16\x78\xca\x9e\xb2\x7f\x02\x00\x00\xff\xff\xdd\xd8\xa1\x0a\x5c\x05\x00\x00")

func opcount_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_opcount_tracerJs,
		"opcount_tracer.js",
	)
}

func opcount_tracerJs() (*asset, error) {
	bytes, err := opcount_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "opcount_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x27, 0xe, 0x97, 0x88, 0x9b, 0x53, 0xbb, 0x20, 0x44, 0xd8, 0xf5, 0xeb, 0x41, 0xd2, 0x7e, 0xd6, 0xda, 0x6b, 0xf5, 0xaf, 0x0, 0x75, 0x9f, 0xd9, 0x22, 0xc, 0x6e, 0x74, 0xac, 0x2a, 0xa9, 0xa7}}
	return a, nil
}

var _prestate_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x57\x4b\x6f\x1b\x39\x12\x3e\xab\x7f\x45\xad\x2f\x92\x10\xa5\x65\x7b\x80\x59\x40\x5e\x2f\xd0\x51\x94\xc4\x80\xc7\x36\x24\x65\xbd\xde\xc1\x1c\xd8\x64\x75\x8b\x23\x8a\x6c\x90\x6c\xc9\xda\xc0\xff\x7d\x51\xec\x87\x1e\xb1\x63\x67\xc7\x27\x8b\x2c\x7e\xf5\xfe\xaa\x7a\x38\x84\xb1\x29\xb6\x56\xe6\x0b\x0f\xe7\xa7\x67\x7f\x87\xf9\x02\x21\x37\xef\xd1\x2f\xd0\x62\xb9\x82\xa4\xf4\x0b\x63\x5d\x34\x1c\xc2\x7c\x21\x1d\x64\x52\x21\x48\x07\x05\xb3\x1e\x4c\x06\xfe\x48\x5e\xc9\xd4\x32\xbb\x8d\xa3\xe1\xb0\x7a\xf3\xec\x35\x21\x64\x16\x11\x9c\xc9\xfc\x86\x59\x1c\xc1\xd6\x94\xc0\x99\x06\x8b\x42\x3a\x6f\x65\x5a\x7a\x04\xe9\x81\x69\x31\x34\x16\x56\x46\xc8\x6c\x4b\x90\xd2\x43\xa9\x05\xda\xa0\xda\xa3\x5d\xb9\xc6\x8e\xcf\x37\x5f\xe1\x1a\x9d\x43\x0b\x9f\x51\xa3\x65\x0a\xee\xca\x54\x49\x0e\xd7\x92\xa3\x76\x08\xcc\x41\x41\x27\x6e\x81\x02\xd2\x00\x47\x0f\x3f\x91\x29\xb3\xda\x14\xf8\x64\x4a\x2d\x98\x97\x46\x0f\x00\x25\x59\x0e\x6b\xb4\x4e\x1a\x0d\xbf\x34\xaa\x6a\xc0\x01\x18\x4b\x20\x3d\xe6\xc9\x01\x0b\xa6\xa0\x77\x7d\x60\x7a\x0b\x8a\xf9\xdd\xd3\x37\x04\x64\xe7\xb7\x00\xa9\x83\x9a\x85\x29\x10\xfc\x82\x79\xf2\x7a\x23\x95\x82\x14\xa1\x74\x98\x95\x6a\x40\x68\x69\xe9\xe1\xfe\x6a\xfe\xe5\xf6\xeb\x1c\x92\x9b\x07\xb8\x4f\xa6\xd3\xe4\x66\xfe\x70\x01\x1b\xe9\x17\xa6\xf4\x80\x6b\xac\xa0\xe4\xaa\x50\x12\x05\x6c\x98\xb5\x4c\xfb\x2d\x98\x8c\x10\x7e\x9b\x4c\xc7\x5f\x92\x9b\x79\xf2\xe1\xea\xfa\x6a\xfe\x00\xc6\xc2\xa7\xab\xf9\xcd\x64\x36\x83\x4f\xb7\x53\x48\xe0\x2e\x99\xce\xaf\xc6\x5f\xaf\x93\x29\xdc\x7d\x9d\xde\xdd\xce\x26\x31\xcc\x90\xac\x42\x7a\xff\x7a\xcc\xb3\x90\x3d\x8b\x20\xd0\x33\xa9\x5c\x13\x89\x07\x53\x82\x5b\x98\x52\x09\x58\xb0\x35\x82\x45\x8e\x72\x8d\x02\x18\x70\x53\x6c\xdf\x9c\x54\xc2\x62\xca\xe8\x3c\xf8\xfc\x62\x41\xc2\x55\x06\xda\xf8\x01\x38\x44\xf8\xc7\xc2\xfb\x62\x34\x1c\x6e\x36\x9b\x38\xd7\x65\x6c\x6c\x3e\x54\x15\x9c\x1b\xfe\x33\x8e\x08\xb3\xb0\xe8\x3c\xf3\x38\xb7\x8c\xa3\x05\x53\xfa\xa2\xf4\x0e\x5c\x99\x65\x92\x4b\xd4\x1e\xa4\xce\x8c\x5d\x85\x4a\x01\x6f\x80\x5b\x64\x1e\x81\x81\x32\x9c\x29\xc0\x47\xe4\x65\xb8\xab\x22\x1d\xca\xd5\x32\xed\x18\x0f\xa7\x99\x35\x2b\xf2\xb5\x74\x9e\xfe\x71\x0e\x57\xa9\x42\x01\x39\x6a\x74\xd2\x41\xaa\x0c\x5f\xc6\xd1\xb7\xa8\xb3\x67\x0c\xd5\x49\xf0\xb0\x16\x0a\xb5\xb1\xc1\xae\x45\x48\x4b\xa9\x84\xd4\x79\x1c\x75\x1a\xe9\x11\xe8\x52\xa9\x41\x14\x20\x94\x31\xcb\xb2\x48\x38\x37\x65\xb0\xfd\x4f\xe4\xbe\x02\x73\x05\x72\x99\x51\x71\xb0\xf6\xd6\x9b\x70\xd5\xea\x35\x29\xc9\xc7\x51\xe7\x00\x66\x04\x59\xa9\x83\x3b\x3d\x26\x84\x1d\x80\x48\xfb\xdf\xa2\x4e\x67\xcd\x2c\x61\xc1\x25\x78\xf3\x05\x1f\xc3\x65\xff\x22\xea\x74\x64\x06\x3d\xbf\x90\x2e\x6e\x80\x7f\x67\x9c\xff\x01\x97\x97\x97\xa1\xa9\x33\xa9\x51\xf4\x81\x20\x3a\xcf\x89\x55\x37\x9d\x94\x29\xa6\x39\x8e\xa0\x7b\xfa\xd8\x85\x77\x20\xd2\x38\x47\xff\xa1\x3a\xad\x94\xc5\xde\xcc\xbc\x95\x3a\xef\x9d\xfd\xda\x1f\x84\x57\xda\x84\x37\x50\x8b\xdf\x98\x56\xb8\xba\xe7\x46\x84\xeb\xda\xe6\x4a\x6a\x6c\x44\x2d\x54\x4b\x39\x6f\x2c\xcb\x71\x04\xdf\x9e\xe8\xf7\x13\x79\xf5\x14\x75\x9e\x0e\xa2\x3c\xab\x84\x5e\x88\x72\x0d\x01\xa8\xbd\x6d\xeb\x3c\x97\xd4\xa9\xfb\x09\x08\x78\x3f\x4a\xc2\xac\x31\xe5\x28\x09\x4b\xdc\xbe\x9e\x09\xba\x90\xe2\xb1\xbd\x58\xe2\xb6\x7f\x11\xbd\x98\xa2\xb8\x36\xfa\x77\x29\x1e\x9f\xcf\x17\x01\xae\x99\x6a\x01\xab\xf8\xcd\x08\x61\x67\x57\x3f\xe8\x0e\x3a\x48\xf6\x6f\x97\x70\x72\xfa\x78\xfa\x17\xff\x4e\x6a\x0b\x9e\x29\x99\x23\xb3\xdf\x60\xda\xd3\x61\x3e\x2d\xba\x52\x79\x6a\x3b\xa9\xd7\x66\x49\x04\xba\xa0\x3c\x29\x15\x52\x63\x0a\xaa\x1a\x57\x31\x58\x8a\xa8\x41\x7a\xb4\x8c\x28\xdc\xac\xd1\xd2\xf4\x02\x8b\xbe\xb4\xda\xb5\xe9\xcc\xa4\x66\xaa\x01\xae\xb3\xef\x2d\xe3\x55\xef\x56\xe7\x7b\x39\xe5\xfe\x31\x64\x33\xf8\x38\x1c\x42\xe2\x81\xfc\x84\xc2\x48\xed\x07\xb0\x41\xd0\x88\x82\x08\x48\xa0\x28\xb9\x0f\x78\xdd\x35\x53\x25\x76\x2b\x92\x21\xaa\x0e\x4f\x4d\x49\x13\x69\x8f\x84\x06\xc1\xc0\x95\x59\x87\x51\x9b\x32\xbe\x84\xba\xf1\x8d\x95\xb9\xd4\x51\x1d\xd3\x83\xa6\x27\x8b\x62\x02\x0e\x66\x85\x9a\xa1\xdc\xd3\xc9\x87\x90\xff\x54\xe6\x57\xda\x1f\x15\x51\x15\xf9\xe6\x69\xff\x8f\xb8\x6e\xe2\xd8\x11\xf1\xf6\xce\xfb\x03\x38\xfb\xb5\xad\x4c\x6f\x08\x0a\x5e\x07\xf3\xe6\x65\xa8\xe8\xb8\x22\x9e\x7f\x16\xd4\x10\x93\xbc\x0b\x5a\x63\x57\xa6\x94\x8e\xca\xcf\x10\xc7\x43\x36\xb9\xf8\x01\xee\xa1\x6f\x0d\x6e\x1d\x9a\x98\x09\xf1\x32\x68\x95\xa2\x8f\xc8\x2d\xae\x68\xba\x50\x16\x38\x53\x0a\x6d\xd7\x41\xe0\xae\x41\x5d\x4e\x21\x5f\xb8\x2a\xfc\xb6\x99\x39\x9e\xd9\x1c\xbd\x7b\xdd\xb0\x80\xf3\xfe\x7d\x43\xc5\x21\x14\xdb\x02\xe1\xf2\x12\xba\xe3\xe9\x24\x99\x4f\xba\x75\x33\x0d\x87\x70\x8f\x61\x23\x4b\x95\x4c\x85\xda\x82\x40\x85\x1e\x2b\xbb\x8c\x0e\x21\x6a\xa9\x69\x40\xab\x15\x2d\x3d\xf8\x28\x9d\x97\x3a\x87\x8a\xb1\x36\x34\xdf\x6b\xb8\xd0\x23\x9c\x95\x8e\xaa\xf5\x68\x18\x7a\x43\x9b\x8d\x45\xe2\x37\x9a\x43\xa1\xdd\x98\x92\xed\x26\x94\x49\xeb\x3c\x14\x8a\x71\x8c\x09\xaf\x35\xe6\xe5\xfc\xd6\xcc\x4c\xaa\xa7\xa1\x05\x03\xd0\x6e\xd0\x32\x45\x83\x9a\xd4\x3b\xe8\x35\x18\xfd\xa8\xd3\xb1\x8d\xf4\x1e\xf6\xc5\x8e\x12\x9c\xc7\x62\x9f\x10\x68\xc1\xc1\x35\x12\x95\x07\x36\xa8\x86\x32\xe9\xfa\xd7\x6f\xf5\x16\x80\x2e\x8e\x3a\xf4\x6e\xaf\xaf\x95\xc9\x0f\xfb\x5a\x54\x61\xe1\xa5\xb5\x94\xff\x76\x14\x64\xd4\xe3\x7f\x96\xce\x53\x4c\x2d\x85\xa7\x66\x8b\xe7\xc8\x3a\x50\x33\x4d\xfd\xfe\xf7\x43\x94\xe6\x67\x98\x57\xa4\xae\x9e\x96\xd5\x56\x59\x18\x8f\xda\x4b\xa6\xd4\x96\xf2\xb0\xb1\xb4\x4e\xd1\x02\x35\x00\x27\x49\x2a\x30\x4e\x10\x95\x9a\xab\x52\x54\x65\x10\xea\xb8\xc6\x73\xc1\xe6\xc3\x3d\x6c\x85\xce\xb1\x1c\x63\xaa\xa4\x4c\x3e\xd6\x9b\xac\x86\x6e\x45\x72\xbd\x7e\x37\x6e\x8d\x3c\xa4\x18\x65\xf2\xb8\x29\x32\xe2\xea\x44\x08\x8b\xce\xf5\xfa\x35\xe7\xb4\x99\xbd\x5f\xa0\xa6\xe0\x83\xc6\x0d\xb4\x2b\x12\xe3\x9c\x56\x46\x31\x00\x26\x04\x51\xdb\xd1\x3a\x13\x75\x3a\x6e\x23\x3d\x5f\x40\xd0\x64\x8a\x5d\x2f\xf6\xeb\xfa\xe7\xcc\x21\x9c\x4c\xfe\x3d\x1f\xdf\x7e\x9c\x8c\x6f\xef\x1e\x4e\x46\x70\x70\x36\xbb\xfa\xcf\xa4\x3d\xfb\x90\x5c\x27\x37\xe3\xc9\xc9\x68\x37\x87\x0e\x1d\xf2\xa6\x71\x81\x14\x3a\xcf\xf8\x32\x2e\x10\x97\xbd\xd3\x43\x1e\xd8\x39\xd8\xe9\xa4\x16\xd9\xf2\x62\x67\x4c\xd5\xa0\xb5\x8e\x86\x72\xe1\x12\x5e\x0c\xd6\xc5\xcb\xd6\x8c\x6b\xf9\x5e\x43\xe4\xbb\x95\x28\x50\xc5\xeb\x76\x9c\xff\xb4\x21\xa1\x77\x18\x5f\x8e\xc0\x31\x45\x9b\xb8\xfc\x2f\x7d\x41\x65\x99\x43\x3f\x00\xd4\xc2\x6c\x88\xf9\x5a\xd4\xea\xa6\xc6\xdd\x0b\xd9\x59\xbf\x62\xd0\xdb\xac\x41\x26\x69\x42\xfb\x5e\xf6\xfc\x59\x59\xd4\x02\x2e\x1b\xfc\x77\xe1\xe9\x1b\x62\x75\x5e\x07\xeb\x48\xc5\x2f\x47\xcb\x66\xb8\x5f\xe1\xca\xd8\x6d\x3d\x91\xf6\x5c\xfc\x71\x60\x93\xeb\xeb\xb6\xa4\xe8\x07\xd5\x59\x7b\xf0\x71\x72\x3d\xf9\x9c\xcc\x27\x07\x52\xb3\x79\x32\xbf\x1a\x57\x47\x3f\x5d\x7b\x67\x6f\xae\xbd\xee\x6c\x36\xbf\x9d\x4e\xba\xa3\xfa\xd7\xf5\x6d\xf2\xb1\xfb\x9d\xc2\x7a\x21\xfd\x51\xf7\x7a\x73\x6f\xac\xf8\x7f\x9a\x60\x6f\x29\xcb\xd8\x73\x3b\x59\x60\x77\xee\xcb\xa3\x6f\x2f\x60\xba\x21\xe6\xac\xfa\xfe\xec\x84\xf7\xcf\x52\xf1\x53\xf4\x14\xfd\x2f\x00\x00\xff\xff\x38\x8e\x83\x03\x15\x11\x00\x00")

func prestate_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_prestate_tracerJs,
		"prestate_tracer.js",
	)
}

func prestate_tracerJs() (*asset, error) {
	bytes, err := prestate_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "prestate_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd1, 0x3, 0x9c, 0x8b, 0x8f, 0xec, 0x57, 0x4b, 0xea, 0xb6, 0x93, 0x2, 0x9e, 0x95, 0x6f, 0x1c, 0x67, 0xb3, 0xbe, 0x4e, 0x79, 0x89, 0xf8, 0xa5, 0xa1, 0x4f, 0xc7, 0xe7, 0x4f, 0x5, 0x41, 0x29}}
	return a, nil
}

var _revert_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x5d\x6f\xda\x48\x14\x7d\xe7\x57\x1c\xf1\x04\x8d\x65\x13\x22\xed\x76\x43\xbd\x12\x1b\x25\x0d\x52\x9a\x44\xe0\xb4\xca\xe3\x60\x5f\xe3\x51\x87\x19\x6b\x66\xcc\x87\xaa\xfc\xf7\xd5\xb5\x4d\x02\x81\xdd\x56\xf5\x4b\x9c\xeb\x7b\xce\xb9\xdf\x44\x11\xae\x4c\xb9\xb5\x72\x51\x78\x0c\x07\xe7\x1f\x91\x14\x84\xef\x4a\x6c\xbd\xc6\xb8\xf2\x85\xb1\xae\x13\x45\x48\x0a\xe9\x90\x4b\x45\x90\x0e\xa5\xb0\x1e\x26\x87\x7f\x73\x55\x72\x6e\x85\xdd\x86\x9d\x28\x6a\xdc\xdf\x7f\x61\x5c\x6e\x89\xe0\x4c\xee\xd7\xc2\xd2\x25\xb6\xa6\x42\x2a\x34\x2c\x65\xd2\x79\x2b\xe7\x95\x27\x48\x0f\xa1\xb3\xc8\x58\x2c\x4d\x26\xf3\x2d\xb3\x49\x8f\x4a\x67\x64\x6b\x41\x4f\x76\xe9\x76\xea\x9f\xef\x9f\x70\x47\xce\x91\xc5\x67\xd2\x64\x85\xc2\x63\x35\x57\x32\xc5\x9d\x4c\x49\x3b\x82\x70\x28\xd9\xe2\x0a\xca\x30\xaf\xe9\x18\x78\xc3\xa1\xcc\xda\x50\x70\x63\x2a\x9d\x09\x2f\x8d\x0e\x40\xd2\x17\x64\xb1\x22\xeb\xa4\xd1\xb8\xd8\x49\xb5\x84\x01\x8c\x65\x92\x9e\xf0\x9c\x80\x85\x29\x19\xd7\x87\xd0\x5b\x28\xe1\xdf\xa0\xff\x5f\x8b\xb7\x94\x33\x48\x5d\x2b\x14\xa6\x24\xf8\x42\x78\x4e\x78\x2d\x95\xc2\x9c\x50\x39\xca\x2b\x15\x30\xd1\xbc\xf2\xf8\x36\x49\x6e\x1f\x9e\x12\x8c\xef\x9f\xf1\x6d\x3c\x9d\x8e\xef\x93\xe7\x11\xd6\xd2\x17\xa6\xf2\xa0\x15\x35\x54\x72\x59\x2a\x49\x19\xd6\xc2\x5a\xa1\xfd\x16\x26\x67\x86\x2f\xd7\xd3\xab\xdb\xf1\x7d\x32\xfe\x67\x72\x37\x49\x9e\x61\x2c\x6e\x26\xc9\xfd\xf5\x6c\x86\x9b\x87\x29\xc6\x78\x1c\x4f\x93\xc9\xd5\xd3\xdd\x78\x8a\xc7\xa7\xe9\xe3\xc3\xec\x3a\xc4\x8c\x38\x2a\x62\xfc\xcf\xcb\x9d\xd7\x8d\xb3\x84\x8c\xbc\x90\xca\xed\x8a\xf0\x6c\x2a\xb8\xc2\x54\x2a\x43\x21\x56\x04\x4b\x29\xc9\x15\x65\x10\x48\x4d\xb9\xfd\xe5\x7e\x32\x97\x50\x46\x2f\xea\x9c\x4f\x4d\x20\x26\x39\xb4\xf1\x01\x1c\x11\x3e\x15\xde\x97\x97\x51\xb4\x5e\xaf\xc3\x85\xae\x42\x63\x17\x91\x6a\x98\x5c\xf4\x77\xd8\x61\x3a\x4b\x2b\xb2\x3e\xb1\x22\x25\x0b\x4b\xbe\xb2\xda\xd5\xc4\xdc\x20\xbd\xe0\xd0\xa6\xd7\x5f\xaf\xa7\x09\xe7\xd2\xb2\xb7\x20\xca\x82\x57\x84\xd0\xa0\x65\xe9\xb7\x3b\x58\xb7\x1b\x76\x7e\x74\x00\xb4\xbe\xb3\xda\x7c\x89\x6e\x37\xe8\xd4\x66\x6f\xc6\x2e\x95\xf2\x12\x79\xa5\x53\x9e\xa1\x5e\x41\x9b\x3e\x1a\x0c\x3f\x2b\x61\x99\x0c\x31\xba\xdd\xd1\x81\x55\x22\xc6\x20\x80\x42\x8c\x82\x36\xa1\x22\xbd\xf0\xc5\x9b\x8b\xcc\xc1\x5c\xa1\xab\xe6\x4d\x30\xbd\x41\x80\x61\x1f\x71\x1c\xa3\x3b\xd8\x74\xf7\x45\x6a\x7f\xc4\x18\xbe\xc1\x5f\x5e\xdf\xb8\x9b\xbd\x11\x24\x3e\x41\x8d\x20\xcf\xe2\xe1\x7b\x28\x47\x93\x9a\x8c\x10\xf3\x55\x70\x34\xd1\x7e\x4f\xba\x27\x59\x37\xc0\xf9\x1f\xfd\xd1\x01\x8c\xd3\x3a\x8b\xd1\xd4\x24\xcc\xad\x59\x5e\x15\xc2\x5e\x99\x8c\x7a\xcc\xd6\xdf\x0f\xe6\xf5\xb5\xa9\x34\x63\x9b\xcf\x2f\x6d\x21\xa3\x08\xce\x53\xc9\x5b\x25\xf5\xca\x7c\xa7\xac\x0e\x9c\xab\xbe\x85\x29\xeb\xf0\xea\xb5\xe2\xa6\x7e\xfd\x02\xda\x50\x5a\x79\x72\x61\xa7\x09\x85\xca\xbd\x1e\x28\xb3\x08\x90\xcd\xfb\xf8\xb1\xcf\x9f\x8b\x4a\xf9\x7d\x81\x75\xd1\x6e\x9a\x48\x7d\x25\x54\xcb\xc9\x07\xc3\xe4\x3c\x0a\xad\x6c\xde\xec\x40\x5d\x4b\xa6\xf8\xa9\x90\x25\x77\x4a\x49\x28\x55\xab\x35\xb4\xae\xd9\xa1\x39\x91\x86\xf4\x64\x05\x1f\x11\xb3\x22\xcb\xa7\x73\x37\x90\x3b\x46\x86\xe5\x52\x0b\xb5\xe3\x6e\x57\xcd\x5b\x91\x72\xf1\xdb\x11\x75\x87\xd1\xa5\x7e\xd3\x46\x77\x30\x55\xa9\xdf\x84\x64\xad\xb1\xe0\x51\xa2\xd5\xf2\x72\x2f\xf3\xdd\x4e\x1c\xcd\x97\xa9\x7c\x59\xf9\x5b\xda\x20\x86\x37\xb7\xb4\xa9\x79\x1a\xeb\xbb\xc1\x60\x91\x57\xf7\xd0\xf1\xae\xf6\x86\xc1\xf9\xa0\x5f\x0b\x0e\x3e\xa6\x17\x7f\xfe\x25\x06\x47\x0a\xfc\x64\x54\x97\xf8\x21\xcf\x1d\xf9\xf8\x7c\x30\x3a\xf2\x68\x96\xa1\x71\xd8\x1f\xd8\xb9\x5c\xf0\x1f\x5e\x8d\xb3\xf7\xe2\x07\xac\xc1\xc1\x7f\x67\x17\xc3\x0f\xc3\x7e\x3f\xf4\xa6\x99\xe3\x5e\xbf\xff\x5f\x9a\x77\xf5\x86\xfe\x96\x66\xad\x72\x42\xf8\x17\xd5\xf9\xa7\x3a\xc6\x09\xf8\x7e\x31\x3e\x0c\x8f\xa1\xa4\x33\xc4\x2d\xc1\xd9\x41\x1a\xa7\xbc\x7d\x21\x5d\xb8\x7f\xe8\xb8\xd5\x6c\x6b\xaf\xdc\x51\x53\x6b\xe2\x80\x74\xf6\x3e\xec\x97\x13\x77\xa8\xdd\xfc\x23\x91\xf6\x0e\x74\x5e\x3a\xff\x06\x00\x00\xff\xff\x65\x5b\xce\x57\xc8\x08\x00\x00")

func revert_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_revert_tracerJs,
		"revert_tracer.js",
	)
}

func revert_tracerJs() (*asset, error) {
	bytes, err := revert_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "revert_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfb, 0x92, 0x5f, 0x8d, 0x20, 0x45, 0x65, 0x46, 0xfc, 0xad, 0x19, 0x51, 0x5e, 0x76, 0x1f, 0xf9, 0xed, 0x91, 0xb5, 0x40, 0x30, 0x9a, 0xf, 0x31, 0x15, 0xbd, 0xe4, 0x9b, 0xc, 0xba, 0xb4, 0x55}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"4byte_tracer.js":    _4byte_tracerJs,
	"call_tracer.js":     call_tracerJs,
	"evmdis_tracer.js":   evmdis_tracerJs,
	"noop_tracer.js":     noop_tracerJs,
	"opcount_tracer.js":  opcount_tracerJs,
	"prestate_tracer.js": prestate_tracerJs,
	"revert_tracer.js":   revert_tracerJs,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"4byte_tracer.js":    {_4byte_tracerJs, map[string]*bintree{}},
	"call_tracer.js":     {call_tracerJs, map[string]*bintree{}},
	"evmdis_tracer.js":   {evmdis_tracerJs, map[string]*bintree{}},
	"noop_tracer.js":     {noop_tracerJs, map[string]*bintree{}},
	"opcount_tracer.js":  {opcount_tracerJs, map[string]*bintree{}},
	"prestate_tracer.js": {prestate_tracerJs, map[string]*bintree{}},
	"revert_tracer.js":   {revert_tracerJs, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
